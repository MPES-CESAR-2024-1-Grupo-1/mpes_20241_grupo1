services:
  be_mpes:
    container_name: be_mpes
    build: backend
    # ports:
      # - 5000:5000
    networks:
      - network_mpes


  # FRONTEN - NEXT.JS sem PM2
  fe_mpes:
    container_name: fe_mpes
    build: frontend
    # restart: always
    # command: ["npm", "run", "start"]
    # command: ["npm", "start"]
    # command: ["pm2", "start", "ecosystem.config.js"]
    # entrypoint: ["entrypoint.sh"]
    ports:
      - 8091:3000
    networks:
      - network_mpes


  # NGINX
  # proxy_reverso_mpes:
  #   image: nginx
  #   container_name: proxy_reverso_mpes
  #   build: proxy_reverso
  #   ports:
  #     - 8091:8091
  #   networks:
  #     - network_mpes
  #   command: [nginx-debug, '-g', 'daemon off;']
  #   depends_on:
  #     - be_mpes
  #     - fe_mpes


volumes:
  pgdata:


networks:
  network_mpes:
    external: true

# volumes:
    #   - ./proxy_reverso/nginx.conf:/etc/nginx/nginx.conf:ro

  # # POSTGRES
  # db_mpes:
  #   image: postgres
  #   container_name: db_postgres_mpes
  #   # restart: always
  #   environment:
  #     POSTGRES_PASSWORD: postgres
  #     POSTGRES_USER: postgres
  #     POSTGRES_DB: db_mpes
  #   networks:
  #     - network_mpes
  #   ports:
  #     - 5432:5432
  #   volumes:
  #     - ./db/pgdata:/var/lib/postgresql/data


    # restart: always
    # build: 
    #   context: .
    #   dockerfile: proxy_reverso/Dockerfile
    # volumes:
    #   - ./templates:/etc/nginx/templates
    # ports:
    #   - "8090:80"
    # # environment:
    #   # - NGINX_HOST=foobar.com
    #   # - NGINX_PORT=80
    # networks:
    #   - network_mpes
    # command: [nginx-debug, '-g', 'daemon off;']

  # dbeaver_mpes:
  #   container_name: dbeaver_mpes
  #   build: 
  #     context: .
  #     dockerfile: dbeaver/Dockerfile
  #   volumes:
  #     - ./var/cloudbeaver/workspace:/opt/cloudbeaver/workspace
  #   networks:
  #     - network_mpes
  #   ports:
  #     - 8978:8978
