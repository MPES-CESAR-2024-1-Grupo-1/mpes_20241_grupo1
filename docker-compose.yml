services:
  be_mpes:
    container_name: be_mpes
    build: backend
    restart: always
    depends_on:
      - db_mpes
    expose:
      - 5000
    networks:
      - network_mpes
    env_file:
      - path: ./backend/development.env
        required: true

  # FRONTEN - NEXT.JS sem PM2
  fe_mpes:
    container_name: fe_mpes
    build: frontend
    restart: always
    # command: ["npm", "run", "start"]
    # command: ["npm", "start"]
    # command: ["pm2", "start", "ecosystem.config.js"]
    # entrypoint: ["entrypoint.sh"]
    expose:
      - 3000
    networks:
      - network_mpes

  db_mpes:
    container_name: db_mpes
    image: postgres
    restart: always
    ports:
      - 5432:5432
    networks:
      - network_mpes
    volumes:
      - pgdata:/var/lib/postgresql/data
    env_file:
      - path: ./postgres.development.env
        required: true


  grafana_mpes:
    container_name: grafana_mpes
    image: grafana/grafana-oss
    restart: always
    expose:
      - 3000
    networks:
      - network_mpes
    volumes:
      - grafanadata:/var/lib/grafana
    environment:
      - GF_SERVER_ROOT_URL=http://localhost:5001/dashboard
      - GF_SERVER_DOMAIN=http://localhost:5001/dashboard
      - GF_SERVER_SERVE_FROM_SUB_PATH=true

  nginx_mpes:
    image: nginx
    container_name: nginx_mpes
    restart: always
    ports:
      - 5001:80
    networks:
      - network_mpes
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    command: [nginx-debug, '-g', 'daemon off;']
    depends_on:
      - be_mpes
      - grafana_mpes


volumes:
  pgdata:
  grafanadata:

networks:
  network_mpes:
